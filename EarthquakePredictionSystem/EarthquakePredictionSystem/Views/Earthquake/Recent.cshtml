@model IEnumerable<EarthquakePredictionSystem.Models.EarthquakeModel>
@{
    ViewBag.Title = "Recent Earthquakes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Recent Earthquakes (Last 24 Hours)</h2>
<p class="text-muted">Live data from USGS - sorted by magnitude (highest first).</p>

<div class="row">
    <div class="col-lg-6">
        <table class="table table-sm table-striped table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>Magnitude</th>
                    <th>Location</th>
                    <th>Local Time</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var q in Model)
            {
                var level = q.Magnitude >= 6 ? "danger" : q.Magnitude >= 4 ? "warning" : "success";
                <tr>
                    <td><span class="badge bg-@level mag-badge">@q.Magnitude.ToString("0.0")</span></td>
                    <td>@q.Location</td>
                    <td>@q.LocalDateTime.ToString("g")</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="col-lg-6">
        <div id="map"></div>
    </div>
</div>

@section scripts {
<script>
    // Initialize map
    var map = L.map('map').setView([20,0], 2);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 10,
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    function magColor(m){
        return m >= 6 ? '#d73027' :
               m >= 5 ? '#fc8d59' :
               m >= 4 ? '#fee08b' :
               m >= 3 ? '#d9ef8b' :
               m >= 2 ? '#91cf60' : '#1a9850';
    }

    fetch('/Earthquake/RecentJson')
        .then(r => r.json())
        .then(data => {
            data.forEach(e => {
                var circle = L.circleMarker([e.Latitude, e.Longitude], {
                    radius: Math.max(4, e.Magnitude * 1.6),
                    color: '#000',
                    weight: 0.5,
                    fillColor: magColor(e.Magnitude),
                    fillOpacity: 0.85
                }).addTo(map);
                var date = new Date(e.Time);
                circle.bindPopup(
                    '<strong>Mag:</strong> ' + e.Magnitude.toFixed(1) + '<br/>' +
                    '<strong>Location:</strong> ' + e.Location + '<br/>' +
                    '<strong>Time:</strong> ' + date.toLocaleString()
                );
            });
        });

    // Legend
    var legend = L.control({position: 'bottomright'});
    legend.onAdd = function() {
        var div = L.DomUtil.create('div', 'legend');
        var mags = [0,2,3,4,5,6];
        for(var i=0;i<mags.length;i++){
            var from = mags[i];
            var to = mags[i+1];
            div.innerHTML += '<div><span style="background:'+magColor(from+0.01)+'"></span>' +
                from + (to ? '&ndash;' + to : '+') + '</div>';
        }
        return div;
    };
    legend.addTo(map);
</script>
}
